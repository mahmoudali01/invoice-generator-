/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import invoicedesktop.invoice;
import invoicedesktop.invoiceItem;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

 class MyCustomFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            return file.isDirectory() || file.getAbsolutePath().endsWith(".csv");
        }
        @Override
        public String getDescription() {
            
            return "csv files (*.csv)";
        }
    }
//class TableData extends javax.swing.JTable.AccessibleJComponent {
////        @Override
////        public boolean accept(File file) {
////            return file.isDirectory() || file.getAbsolutePath().endsWith(".csv");
////        }
////        @Override
////        public String getDescription() {
////            
////            return "csv files (*.csv)";
//    
////        
//    }
public class NewJFrame extends javax.swing.JFrame {
               ArrayList<invoice> allInvoices = new ArrayList<invoice>();
                                       ArrayList<ArrayList<invoiceItem>> allItems =new ArrayList<ArrayList<invoiceItem>>();


//DefaultTableModel invoiceModel =null;
    /**
     * Creates new form NewJFrame
     */
    
    public NewJFrame() {
        initComponents();
      //  showInvoices();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoicesTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        invoiceItemsTable = new javax.swing.JTable();
        invoiceNumberLabel = new javax.swing.JLabel();
        invoiceDateLabel = new javax.swing.JLabel();
        customerNameLabel = new javax.swing.JLabel();
        invoiceTotalLabel = new javax.swing.JLabel();
        invoiceDate = new javax.swing.JTextField();
        customerName = new javax.swing.JTextField();
        createInvoiceButton = new javax.swing.JButton();
        deleteInvoiceButton = new javax.swing.JButton();
        addItemButton = new javax.swing.JButton();
        deleteItemButton = new javax.swing.JButton();
        invoiceNumber = new javax.swing.JTextField();
        invoiceTotalPrice = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        loadFile = new javax.swing.JMenu();
        load = new javax.swing.JMenuItem();
        saveFile = new javax.swing.JMenuItem();

        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setDialogTitle("enter specified  csv files");
        fileChooser.setFileFilter(new MyCustomFilter()
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        invoicesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "invoice number", "invoice date", "customer name", "total price"
            }
        ));
        invoicesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invoicesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(invoicesTable);

        invoiceItemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "item name", "item price", "item count", "total price"
            }
        ));
        jScrollPane2.setViewportView(invoiceItemsTable);

        invoiceNumberLabel.setText("invoice number");

        invoiceDateLabel.setText("invoice date");

        customerNameLabel.setText("customer name");

        invoiceTotalLabel.setText("invoice total");

        invoiceDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceDateActionPerformed(evt);
            }
        });

        createInvoiceButton.setText("create invoice");

        deleteInvoiceButton.setText("delete invoice");

        addItemButton.setText("add item");

        deleteItemButton.setText("delete item");

        invoiceNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceNumberActionPerformed(evt);
            }
        });

        loadFile.setText("File");
        loadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFileActionPerformed(evt);
            }
        });

        load.setText("load file");
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });
        loadFile.add(load);

        saveFile.setText("save file");
        saveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileActionPerformed(evt);
            }
        });
        loadFile.add(saveFile);

        jMenuBar1.add(loadFile);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(invoiceTotalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(customerNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(invoiceDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(invoiceNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(invoiceDate, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(invoiceTotalPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .addComponent(invoiceNumber))
                        .addGap(111, 111, 111))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(createInvoiceButton)
                .addGap(71, 71, 71)
                .addComponent(deleteInvoiceButton)
                .addGap(129, 129, 129)
                .addComponent(addItemButton)
                .addGap(89, 89, 89)
                .addComponent(deleteItemButton)
                .addGap(0, 69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(invoiceNumberLabel)
                            .addComponent(invoiceNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(invoiceDateLabel)
                            .addComponent(invoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(customerName)
                            .addComponent(customerNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(invoiceTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(invoiceTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createInvoiceButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteInvoiceButton)
                        .addComponent(addItemButton)
                        .addComponent(deleteItemButton)))
                .addContainerGap(93, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   private void showInvoices(String header ,String line){
       DefaultTableModel invoiceModel = (DefaultTableModel) invoicesTable.getModel();
                        invoice in =new invoice();
                         in.setInvoiceHeader(header);
                        in.setInvoiceLine(line);
                        allInvoices =in.returnAllInvoices();
                        for(invoice x: allInvoices){
                        allItems.add(x.getInvoiceItems());
                        }
                       
               Object []rowData =new Object[4];
                for (int i = 0; i <= allInvoices.size(); i++)
             {
                rowData[0] = String.valueOf(allInvoices.get(i).getInvoiceNO());
                 rowData[1] = String.valueOf(allInvoices.get(i).getDate());
                  rowData[2] = String.valueOf(allInvoices.get(i).getClientName());
                rowData[3] = String.valueOf(allInvoices.get(i).getItemsTotalPrice());
              invoiceModel.addRow(rowData);
              }

    }
  
    void selectedInvoiceItems(int index){
       
       DefaultTableModel invoiceItemModel = (DefaultTableModel) invoiceItemsTable.getModel();
       invoiceItemModel.setRowCount(0);

            Object []rowData =new Object[4];
                for (int i = 0; i <= allItems.get(index).size(); i++)
               {
                rowData[0] = String.valueOf(allItems.get(index).get(i).getItemName());
                 rowData[1] = String.valueOf(allItems.get(index).get(i).getItemPrice());
                  rowData[2] = String.valueOf(allItems.get(index).get(i).getItemCount());
                rowData[3] = String.valueOf(allItems.get(index).get(i).calTotalItemPrice());
              invoiceItemModel.addRow(rowData);
        }
   }
    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        // TODO add your handling code here:
    JOptionPane.showMessageDialog(null, "<select the  invoice file>", "Alert", JOptionPane.QUESTION_MESSAGE);        

        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
      File   headerFile = fileChooser.getSelectedFile();
         JOptionPane.showMessageDialog(null, "<the invoice file added successfully.>", "Alert", JOptionPane.INFORMATION_MESSAGE);        
         JOptionPane.showMessageDialog(null, "<select the  invoice items file>", "Alert", JOptionPane.QUESTION_MESSAGE);        

              int returnVa =  fileChooser.showOpenDialog(this);
              if (returnVa == JFileChooser.APPROVE_OPTION) {

                JOptionPane.showMessageDialog(null, "<the invoice items file added successfully.>", "Alert", JOptionPane.INFORMATION_MESSAGE);        

                      File    headerLine = fileChooser.getSelectedFile();
                      showInvoices(headerFile.getAbsolutePath(),headerLine.getAbsolutePath());
                      System.out.println(headerFile.getAbsoluteFile());
                       
                     }
               

    } else {
        System.out.println("no file chosen");
    }
        
    }//GEN-LAST:event_loadActionPerformed

    private void invoiceDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_invoiceDateActionPerformed

    private void saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileActionPerformed
                     // TODO add your handling code here:
               System.exit(0);

    }//GEN-LAST:event_saveFileActionPerformed

    private void loadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFileActionPerformed

    }//GEN-LAST:event_loadFileActionPerformed

    private void invoicesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoicesTableMouseClicked
        // TODO add your handling code here:
        int index = invoicesTable.getSelectedRow();
         TableModel model = invoicesTable.getModel();
         String inNum = model.getValueAt(index, 0).toString();
         String date = model.getValueAt(index, 1).toString() ;
         String clientName= model.getValueAt(index, 2).toString();
         String total =model.getValueAt(index, 3).toString();
         invoiceNumber.setText(inNum);
         invoiceDate.setText(date);
         customerName.setText(clientName);
         invoiceTotalPrice.setText(total);
         selectedInvoiceItems(index);
        
    }//GEN-LAST:event_invoicesTableMouseClicked

    private void invoiceNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_invoiceNumberActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new NewJFrame().setVisible(true);
             //  new NewJFrame().loadFileActionPerformed();
             //loadFileActionPerformed();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItemButton;
    private javax.swing.JButton createInvoiceButton;
    private javax.swing.JTextField customerName;
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JButton deleteInvoiceButton;
    private javax.swing.JButton deleteItemButton;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JTextField invoiceDate;
    private javax.swing.JLabel invoiceDateLabel;
    private javax.swing.JTable invoiceItemsTable;
    private javax.swing.JTextField invoiceNumber;
    private javax.swing.JLabel invoiceNumberLabel;
    private javax.swing.JLabel invoiceTotalLabel;
    private javax.swing.JTextField invoiceTotalPrice;
    private javax.swing.JTable invoicesTable;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem load;
    private javax.swing.JMenu loadFile;
    private javax.swing.JMenuItem saveFile;
    // End of variables declaration//GEN-END:variables
}
