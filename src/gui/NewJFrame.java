/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import invoicedesktop.invoice;
import invoicedesktop.invoiceItem;
import java.awt.Color;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

 class MyCustomFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            return file.isDirectory() || file.getAbsolutePath().endsWith(".csv");
        }
        @Override
        public String getDescription() {
            
            return "csv files (*.csv)";
        }
    }

public class NewJFrame extends javax.swing.JFrame {
           File   headerFile = new File("/");
            File headerLine = new File("/");
               ArrayList<invoice> allInvoices = new ArrayList<invoice>();
               ArrayList<ArrayList<invoiceItem>> allItems =new ArrayList<ArrayList<invoiceItem>>();
               invoice in =new invoice();
               invoiceItem item =new invoiceItem();
        DefaultTableModel invoiceModel;
        DefaultTableModel invoiceItemModel;


    /**
     * Creates new form NewJFrame
     */
    
    public NewJFrame() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        addInvoiceDialog = new javax.swing.JDialog();
        setInvoiceDate = new javax.swing.JTextField();
        addInvoieHeadLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        setClientName = new javax.swing.JTextField();
        submitAddingInvoice = new javax.swing.JButton();
        cancelAddInvoice = new javax.swing.JButton();
        addItemDialog = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        setItemName = new javax.swing.JTextField();
        setItemPrice = new javax.swing.JTextField();
        setItemCount = new javax.swing.JTextField();
        addingItem = new javax.swing.JButton();
        canelAddItem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoicesTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        invoiceItemsTable = new javax.swing.JTable();
        invoiceNumberLabel = new javax.swing.JLabel();
        invoiceDateLabel = new javax.swing.JLabel();
        customerNameLabel = new javax.swing.JLabel();
        invoiceTotalLabel = new javax.swing.JLabel();
        invoiceDate = new javax.swing.JTextField();
        customerName = new javax.swing.JTextField();
        createInvoiceButton = new javax.swing.JButton();
        deleteInvoiceButton = new javax.swing.JButton();
        addItemButton = new javax.swing.JButton();
        deleteItemButton = new javax.swing.JButton();
        invoiceNumber = new javax.swing.JTextField();
        invoiceTotalPrice = new javax.swing.JTextField();
        saveUpdates = new javax.swing.JButton();
        cancelChanges = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        loadFile = new javax.swing.JMenu();
        load = new javax.swing.JMenuItem();
        saveFile = new javax.swing.JMenuItem();

        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setDialogTitle("enter specified  csv files");
        fileChooser.setFileFilter(new MyCustomFilter()
        );

        addInvoiceDialog.setBounds(new java.awt.Rectangle(0, 0, 300, 300));
        addInvoiceDialog.setSize(new java.awt.Dimension(300, 300));

        addInvoieHeadLabel.setText("enter data for the new invoice");

        jLabel2.setText("enter invoice date");

        jLabel3.setText("enter client name");

        setClientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setClientNameActionPerformed(evt);
            }
        });

        submitAddingInvoice.setText("submit");
        submitAddingInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitAddingInvoiceActionPerformed(evt);
            }
        });

        cancelAddInvoice.setText("cancel");
        cancelAddInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelAddInvoiceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addInvoiceDialogLayout = new javax.swing.GroupLayout(addInvoiceDialog.getContentPane());
        addInvoiceDialog.getContentPane().setLayout(addInvoiceDialogLayout);
        addInvoiceDialogLayout.setHorizontalGroup(
            addInvoiceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addInvoiceDialogLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(addInvoieHeadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addInvoiceDialogLayout.createSequentialGroup()
                .addGroup(addInvoiceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addInvoiceDialogLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(submitAddingInvoice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelAddInvoice)
                        .addGap(36, 36, 36))
                    .addGroup(addInvoiceDialogLayout.createSequentialGroup()
                        .addContainerGap(53, Short.MAX_VALUE)
                        .addGroup(addInvoiceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(addInvoiceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(setClientName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(setInvoiceDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(112, 112, 112))
        );
        addInvoiceDialogLayout.setVerticalGroup(
            addInvoiceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addInvoiceDialogLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(addInvoieHeadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addInvoiceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setInvoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addInvoiceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setClientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(35, 35, 35)
                .addGroup(addInvoiceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitAddingInvoice)
                    .addComponent(cancelAddInvoice))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        addItemDialog.setSize(new java.awt.Dimension(370, 350));

        jLabel4.setText("enter item name");

        jLabel5.setText("enter item price");

        jLabel6.setText("enter item count");

        setItemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setItemNameActionPerformed(evt);
            }
        });

        addingItem.setText("add item");
        addingItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addingItemActionPerformed(evt);
            }
        });

        canelAddItem.setText("cancel");
        canelAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canelAddItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addItemDialogLayout = new javax.swing.GroupLayout(addItemDialog.getContentPane());
        addItemDialog.getContentPane().setLayout(addItemDialogLayout);
        addItemDialogLayout.setHorizontalGroup(
            addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addItemDialogLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(setItemPrice)
                    .addComponent(setItemName)
                    .addComponent(setItemCount, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                .addContainerGap(72, Short.MAX_VALUE))
            .addGroup(addItemDialogLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(addingItem)
                .addGap(40, 40, 40)
                .addComponent(canelAddItem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addItemDialogLayout.setVerticalGroup(
            addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addItemDialogLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(setItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(setItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(setItemCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addingItem)
                    .addComponent(canelAddItem))
                .addGap(30, 30, 30))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        invoicesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "invoice number", "invoice date", "customer name", "total price"
            }
        ){
            public boolean isCellEditable(int row,int column){
                return false;
            }}
        );
        invoicesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invoicesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(invoicesTable);

        invoiceItemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "item name", "item price", "item count", "total price"
            }
        ){
            public boolean isCellEditable(int row , int column){
                return false;
            }
        }
    );
    jScrollPane2.setViewportView(invoiceItemsTable);

    invoiceNumberLabel.setText("invoice number");

    invoiceDateLabel.setText("invoice date");

    customerNameLabel.setText("customer name");

    invoiceTotalLabel.setText("invoice total");

    invoiceDate.setEditable(false);
    invoiceDate.setBackground(new java.awt.Color(204, 204, 204));
    invoiceDate.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            invoiceDateActionPerformed(evt);
        }
    });

    customerName.setEditable(false);
    customerName.setBackground(new java.awt.Color(204, 204, 204));

    createInvoiceButton.setText("create invoice");
    createInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            createInvoiceButtonActionPerformed(evt);
        }
    });

    deleteInvoiceButton.setText("delete invoice");
    deleteInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            deleteInvoiceButtonActionPerformed(evt);
        }
    });

    addItemButton.setText("add item");
    addItemButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addItemButtonActionPerformed(evt);
        }
    });

    deleteItemButton.setText("delete item");
    deleteItemButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            deleteItemButtonActionPerformed(evt);
        }
    });

    invoiceNumber.setEditable(false);
    invoiceNumber.setBackground(new java.awt.Color(204, 204, 204));
    invoiceNumber.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            invoiceNumberActionPerformed(evt);
        }
    });

    invoiceTotalPrice.setEditable(false);
    invoiceTotalPrice.setBackground(new java.awt.Color(204, 204, 204));

    saveUpdates.setText("save");
    saveUpdates.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            saveUpdatesActionPerformed(evt);
        }
    });

    cancelChanges.setText("cancel");

    loadFile.setText("File");
    loadFile.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            loadFileActionPerformed(evt);
        }
    });

    load.setText("load file");
    load.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            loadActionPerformed(evt);
        }
    });
    loadFile.add(load);

    saveFile.setText("save file");
    saveFile.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            saveFileActionPerformed(evt);
        }
    });
    loadFile.add(saveFile);

    jMenuBar1.add(loadFile);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(invoiceTotalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(customerNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(invoiceDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(invoiceNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(invoiceDate, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(customerName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(invoiceTotalPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                        .addComponent(invoiceNumber))
                    .addGap(111, 111, 111))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(29, Short.MAX_VALUE))))
        .addGroup(layout.createSequentialGroup()
            .addGap(38, 38, 38)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(saveUpdates)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(createInvoiceButton)
                    .addGap(71, 71, 71)
                    .addComponent(deleteInvoiceButton)
                    .addGap(129, 129, 129)
                    .addComponent(addItemButton)))
            .addGap(89, 89, 89)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(deleteItemButton)
                .addComponent(cancelChanges))
            .addGap(0, 0, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(invoiceNumberLabel)
                        .addComponent(invoiceNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(invoiceDateLabel)
                        .addComponent(invoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(customerName)
                        .addComponent(customerNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(invoiceTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(invoiceTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(createInvoiceButton)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteInvoiceButton)
                    .addComponent(addItemButton)
                    .addComponent(deleteItemButton)))
            .addGap(32, 32, 32)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(saveUpdates)
                .addComponent(cancelChanges))
            .addContainerGap(39, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents
   private void showInvoices(String header ,String line){
        invoiceModel = (DefaultTableModel) invoicesTable.getModel();
                         in.setInvoiceHeader(header);
                        in.setInvoiceLine(line);
                        allInvoices =in.returnAllInvoices();
                        for(invoice x: allInvoices){
                        allItems.add(x.getInvoiceItems());
                        }
                       
               Object []rowData =new Object[4];
                for (int i = 0; i <= allInvoices.size(); i++)
             {
                rowData[0] = String.valueOf(allInvoices.get(i).getInvoiceNO());
                 rowData[1] = String.valueOf(allInvoices.get(i).getDate());
                  rowData[2] = String.valueOf(allInvoices.get(i).getClientName());
                rowData[3] = String.valueOf(allInvoices.get(i).getItemsTotalPrice());
              invoiceModel.addRow(rowData);
              }

    }
  
    void selectedInvoiceItems(int index){
       
        invoiceItemModel = (DefaultTableModel) invoiceItemsTable.getModel();
       invoiceItemModel.setRowCount(0);

            Object []rowData =new Object[4];
                for (int i = 0; i <= allItems.get(index).size(); i++)
               {
                rowData[0] = String.valueOf(allItems.get(index).get(i).getItemName());
                 rowData[1] = String.valueOf(allItems.get(index).get(i).getItemPrice());
                  rowData[2] = String.valueOf(allItems.get(index).get(i).getItemCount());
                rowData[3] = String.valueOf(allItems.get(index).get(i).calTotalItemPrice());
              invoiceItemModel.addRow(rowData);
        }
   }
    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        // TODO add your handling code here:
    JOptionPane.showMessageDialog(null, "<select the  invoice file>", "Alert", JOptionPane.QUESTION_MESSAGE);        

        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
         headerFile = fileChooser.getSelectedFile();
//         JOptionPane.showMessageDialog(null, "<the invoice file added successfully.>", "Alert", JOptionPane.INFORMATION_MESSAGE);        
         JOptionPane.showMessageDialog(null, "<select the  invoice items file>", "Alert", JOptionPane.QUESTION_MESSAGE);        

              int returnVa =  fileChooser.showOpenDialog(this);
              if (returnVa == JFileChooser.APPROVE_OPTION) {

//                JOptionPane.showMessageDialog(null, "<the invoice items file added successfully.>", "Alert", JOptionPane.INFORMATION_MESSAGE);        

                          headerLine = fileChooser.getSelectedFile();
                      showInvoices(headerFile.getAbsolutePath(),headerLine.getAbsolutePath());
                      System.out.println(headerFile.getAbsoluteFile());
                       
                     }
               

    } else {
        System.out.println("no file chosen");
    }
        
    }//GEN-LAST:event_loadActionPerformed

    private void invoiceDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_invoiceDateActionPerformed

    private void saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileActionPerformed
                     // TODO add your handling code here:
               System.exit(0);

    }//GEN-LAST:event_saveFileActionPerformed

    private void loadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFileActionPerformed

    }//GEN-LAST:event_loadFileActionPerformed

    private void invoicesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoicesTableMouseClicked
        // TODO add your handling code here:
             invoiceDate.setEditable(true);
             invoiceDate.setBackground(Color.WHITE);
             customerName.setEditable(true);
             customerName.setBackground(Color.WHITE);

              
        int index = invoicesTable.getSelectedRow();
         TableModel model = invoicesTable.getModel();
         String inNum = model.getValueAt(index, 0).toString();
         String date = model.getValueAt(index, 1).toString() ;
         String clientName= model.getValueAt(index, 2).toString();
         String total =model.getValueAt(index, 3).toString();
         invoiceNumber.setText(inNum);
         invoiceDate.setText(date);
         customerName.setText(clientName);
         invoiceTotalPrice.setText(total);
         selectedInvoiceItems(index);
        
    }//GEN-LAST:event_invoicesTableMouseClicked

    private void invoiceNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_invoiceNumberActionPerformed

    private void setClientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setClientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_setClientNameActionPerformed

    private void setItemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setItemNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_setItemNameActionPerformed

    private void createInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createInvoiceButtonActionPerformed
          if(!headerFile.isFile()||!headerLine.isFile()){
           JOptionPane.showMessageDialog(null, "<please upload files first>", "Alert", JOptionPane.QUESTION_MESSAGE);        

          }     
         else if(!headerFile.isFile()&&!headerLine.isFile()){
           JOptionPane.showMessageDialog(null, "<please upload files first>", "Alert", JOptionPane.QUESTION_MESSAGE);        

          }     
         
        else{ addInvoiceDialog.setVisible(true);}


    }//GEN-LAST:event_createInvoiceButtonActionPerformed
void creatingInvoice(String date,String clientName){
       invoiceModel = (DefaultTableModel) invoicesTable.getModel();
 

       if(  date.equals("") || clientName.equals("")){
         JOptionPane.showMessageDialog(null, "you must enter values for date and name", "Alert", JOptionPane.QUESTION_MESSAGE);        
       }else if(date.equals("") && clientName.equals("")){
         JOptionPane.showMessageDialog(null, "you must enter values for date and name", "Alert", JOptionPane.QUESTION_MESSAGE);        
          }
       else if(!date.equals("") &&!clientName.equals("")){
           ArrayList<invoiceItem> items = new ArrayList<invoiceItem>();
           int size  =allInvoices.size();
           size++;

           invoice newIn =new invoice(size,date,clientName);
           newIn.setInvoiceItems(items);        
           allInvoices.add(newIn);
           allItems.add(items);

                 Object []rowData =new Object[4];

                 rowData[0] = String.valueOf(newIn.getInvoiceNO());
                 rowData[1] = String.valueOf(newIn.getDate());
                 rowData[2] = String.valueOf(newIn.getClientName());
                 rowData[3] = String.valueOf(newIn.getItemsTotalPrice());
                 invoiceModel.addRow(rowData);
                 addInvoiceDialog.setVisible(false);
    }
}
    private void submitAddingInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitAddingInvoiceActionPerformed
        // TODO add your handling code here:
      String date ,clientName;
       date =setInvoiceDate.getText();
        clientName =setClientName.getText();
               
                creatingInvoice(date,clientName);
                setInvoiceDate.setText("");
                 setClientName.setText("");


    }//GEN-LAST:event_submitAddingInvoiceActionPerformed
void addItemToInvoice(String itemName ,String itemPrice,String itemCount){
        invoiceItemModel = (DefaultTableModel) invoiceItemsTable.getModel();
        invoiceModel = (DefaultTableModel) invoicesTable.getModel();

       // int index = invoicesTable.getSelectedRow();

       if(  itemName.equals("") || itemPrice.equals("")||itemCount.equals("")){
         JOptionPane.showMessageDialog(null, "you must enter values for date and name", "Alert", JOptionPane.QUESTION_MESSAGE);        
       }else if(  itemName.equals("") && itemPrice.equals("")&&itemCount.equals("")){
         JOptionPane.showMessageDialog(null, "you must enter values for date and name", "Alert", JOptionPane.QUESTION_MESSAGE);        
          }
       else if(!itemName.equals("") &&!itemPrice.equals("")&&!itemCount.equals("")){
                   int index = invoicesTable.getSelectedRow();
                   int count = Integer.parseInt(itemCount);
                   double price = Double.parseDouble(itemPrice);
                      
              invoiceItem it =new invoiceItem(itemName,price,count,allInvoices.get(index));
                   allItems.get(index).add(it);

                 Object []rowData =new Object[4];

                 rowData[0] = String.valueOf(it.getItemName());
                 rowData[1] = String.valueOf(it.getItemPrice());
                 rowData[2] = String.valueOf(it.getItemCount());
                 rowData[3] = String.valueOf(it.calTotalItemPrice());
                 invoiceItemModel.addRow(rowData);
                 String pr = String.valueOf(allInvoices.get(index).getItemsTotalPrice());
                 invoiceTotalPrice.setText(pr);
                 invoiceModel.setValueAt(pr,index,3);
            
    }

}
    private void addItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButtonActionPerformed
        // TODO add your handling code here:
        if(invoicesTable.getSelectionModel().isSelectionEmpty()) {
         JOptionPane.showMessageDialog(null, "must select invoice first", "Alert", JOptionPane.QUESTION_MESSAGE);        
       }
        else
            addItemDialog.setVisible(true);
         

    }//GEN-LAST:event_addItemButtonActionPerformed

    private void addingItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addingItemActionPerformed
        // TODO add your handling code here:
         String itemName ,itemCount,itemPrice;
        itemName =setItemName.getText();
        itemCount =setItemCount.getText();
        itemPrice =setItemPrice.getText();

               
                addItemToInvoice(itemName,itemCount,itemPrice);
                 setItemName.setText("");
                 setItemCount.setText("");
                 setItemPrice.setText("");
                 addItemDialog.setVisible(false);

    }//GEN-LAST:event_addingItemActionPerformed

    private void deleteInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteInvoiceButtonActionPerformed
        // TODO add your handling code here:
                invoiceModel = (DefaultTableModel) invoicesTable.getModel();
                invoiceItemModel = (DefaultTableModel) invoiceItemsTable.getModel();


         if(invoicesTable.getSelectionModel().isSelectionEmpty()) {
         JOptionPane.showMessageDialog(null, "must select invoice first", "Alert", JOptionPane.QUESTION_MESSAGE);        
       }
         else{
                                         int index = invoicesTable.getSelectedRow();

                            invoiceModel.removeRow(index);
                            allInvoices.remove(index);
                            allItems.remove(index);
                            invoiceItemModel.setRowCount(0);
                            invoiceNumber.setText("");
                            invoiceDate.setText("");
                            customerName.setText("");
                            invoiceTotalPrice.setText("");

                            

              }
    }//GEN-LAST:event_deleteInvoiceButtonActionPerformed

    private void deleteItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemButtonActionPerformed
        // TODO add your handling code here:
             invoiceItemModel = (DefaultTableModel) invoiceItemsTable.getModel();
             invoiceModel = (DefaultTableModel) invoicesTable.getModel();


         if(invoiceItemsTable.getSelectionModel().isSelectionEmpty()) {
         JOptionPane.showMessageDialog(null, "must select item first", "Alert", JOptionPane.QUESTION_MESSAGE);        
       }
         else{
                                         int indexx = invoicesTable.getSelectedRow();

                                         int index = invoiceItemsTable.getSelectedRow();

                            invoiceItemModel.removeRow(index);
                            allItems.get(indexx).remove(index);
                            String pr = String.valueOf(allInvoices.get(indexx).getItemsTotalPrice());
                            invoiceTotalPrice.setText(pr);
                            invoiceModel.setValueAt(pr,indexx,3);

              }
        
    }//GEN-LAST:event_deleteItemButtonActionPerformed

    private void canelAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canelAddItemActionPerformed
        // TODO add your handling code here:
        addItemDialog.setVisible(false);
        
    }//GEN-LAST:event_canelAddItemActionPerformed

    private void cancelAddInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelAddInvoiceActionPerformed
        // TODO add your handling code here:
                addInvoiceDialog.setVisible(false);
    }//GEN-LAST:event_cancelAddInvoiceActionPerformed

    private void saveUpdatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveUpdatesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveUpdatesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new NewJFrame().setVisible(true);
             //  new NewJFrame().loadFileActionPerformed();
             //loadFileActionPerformed();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog addInvoiceDialog;
    private javax.swing.JLabel addInvoieHeadLabel;
    private javax.swing.JButton addItemButton;
    private javax.swing.JDialog addItemDialog;
    private javax.swing.JButton addingItem;
    private javax.swing.JButton cancelAddInvoice;
    private javax.swing.JButton cancelChanges;
    private javax.swing.JButton canelAddItem;
    private javax.swing.JButton createInvoiceButton;
    private javax.swing.JTextField customerName;
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JButton deleteInvoiceButton;
    private javax.swing.JButton deleteItemButton;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JTextField invoiceDate;
    private javax.swing.JLabel invoiceDateLabel;
    private javax.swing.JTable invoiceItemsTable;
    private javax.swing.JTextField invoiceNumber;
    private javax.swing.JLabel invoiceNumberLabel;
    private javax.swing.JLabel invoiceTotalLabel;
    private javax.swing.JTextField invoiceTotalPrice;
    private javax.swing.JTable invoicesTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem load;
    private javax.swing.JMenu loadFile;
    private javax.swing.JMenuItem saveFile;
    private javax.swing.JButton saveUpdates;
    private javax.swing.JTextField setClientName;
    private javax.swing.JTextField setInvoiceDate;
    private javax.swing.JTextField setItemCount;
    private javax.swing.JTextField setItemName;
    private javax.swing.JTextField setItemPrice;
    private javax.swing.JButton submitAddingInvoice;
    // End of variables declaration//GEN-END:variables
}
